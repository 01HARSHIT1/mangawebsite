services:
  # MongoDB Database
  mongo:
    image: mongo:7.0
    container_name: manga-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: mangawebsite
    volumes:
      - mongo_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - manga-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Next.js Application
  app:
    build: 
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: manga-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password123@mongo:27017/mangawebsite?authSource=admin
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - NEXT_TELEMETRY_DISABLED=1
      - PORT=3000
      - HOSTNAME=0.0.0.0
    volumes:
      - manga_images:/app/public/manga-images
      - manga_covers:/app/public/manga-covers
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - manga-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MongoDB Express (Optional - for database management)
  mongo-express:
    image: mongo-express:1.0.2
    container_name: manga-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongo:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
      ME_CONFIG_SITE_BASEURL: /mongo-express/
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - manga-network

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: manga-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - manga-network
    profiles:
      - production

volumes:
  mongo_data:
    driver: local
  manga_images:
    driver: local
  manga_covers:
    driver: local

networks:
  manga-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16